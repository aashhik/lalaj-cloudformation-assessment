name: Application Build

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:

    # Checkout under Github Workspace
    - name: Check out code
      uses: actions/checkout@v5
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build, tag and push image to DockerHub
      run: |
        docker build -f ./app/Dockerfile -t aashhik/hellopython:v1 .
        echo "Pushing image to DockerHub..."
        docker push aashhik/hellopython:v1

  pre-deploy:
    name: Create S3 Buckets and AWS Roles
    needs: ['build']
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_ADMIN_REGION }}

      - name: Create S3 bucket and execution roles for Cloudformation
        env:
          BUCKET_NAME: ${{ vars.BUCKET_NAME }}
          BUCKET_PREFIX: ${{ vars.BUCKET_PREFIX }}
          AWS_ADMIN_ACCOUNT_ID: ${{ vars.AWS_ADMIN_ACCOUNT_ID }}
        run: |
          bash ./scripts/prerequisites.sh "$BUCKET_NAME" "$BUCKET_PREFIX" "$AWS_ADMIN_ACCOUNT_ID"

  deploy:
    name: Create AWS Services using Cloudformation templates
    needs: ['build', 'pre-deploy']
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_ADMIN_REGION }}

      - name: Deploy Cloudformation Stacks
        id: cf-deploy
        env:
          BUCKET_NAME: ${{ vars.BUCKET_NAME }}
          BUCKET_PREFIX: ${{ vars.BUCKET_PREFIX }}
          AWS_ADMIN_ACCOUNT_ID: ${{ vars.AWS_ADMIN_ACCOUNT_ID }}
          AWS_TARGET_ACCOUNT_ID: ${{ vars.AWS_TARGET_ACCOUNT_ID }}
          AWS_TARGET_REGION: ${{ vars.AWS_TARGET_REGION }}
          STACKSET_NAME: ${{ vars.STACKSET_NAME }}
        run: |
          bash ./scripts/deploy.sh "$BUCKET_NAME" "$BUCKET_PREFIX" "$AWS_ADMIN_ACCOUNT_ID" "$AWS_TARGET_ACCOUNT_ID" "$AWS_TARGET_REGION" "$STACKSET_NAME"
    outputs:
      endpoint: ${{ steps.cf-deploy.outputs.alb-endpoint }}

  run-test:
    name: Test AWS ALB endpoint for /hello
    needs: ['build', 'pre-deploy', 'deploy']
    runs-on: ubuntu-latest
    steps:
      - name: Test endpoint with curl
        env:
          ALB_ENDPOINT: ${{ needs.deploy.outputs.endpoint}}
        run: |
          echo $ALB_ENDPOINT
          echo ""
          curl -s http://$ALB_ENDPOINT/hello || curl -s http://$ALB_ENDPOINT; echo